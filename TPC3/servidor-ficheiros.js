var http = require('http')
var fs = require('fs')
var url = require('url')
var axios = require('axios')

function genAtor(ator) {
    let filmesList = "";
    ator.filmes.forEach(filme => {
        filmesList += `<li>${filme}</li>`;
    });

    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Atores</title>
            <link rel="stylesheet" href="/w3.css" />
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Ator ${ator.name}</h1>
                </header>
                
                <div class="w3-container">
                    <p><b>ID:</b> ${ator.id}</p>
                    <p><b>Nome:</b> ${ator.name}</p>
                    <p><b>Filmes:</b></p>
                    <ul class="w3-ul">${filmesList}</ul>
                </div>

                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024 :: A100665 [<a href="/actores"> Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `;

    return pageHTML;
}

function genAtores(atores) {
    let pagHTML = `
        <!DOCTYPE html>
        <html>
        <head>
            <title>Lista de Atores</title>
            <meta charset="utf-8"/>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Lista de Atores</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>ID</th>
                            <th>Nome</th>
                            <th>Filmes</th>
                        </tr>
    `

    atores.forEach(ator => {
        pagHTML += `
            <tr>
                <td><a href="/actores/${ator.id}">${ator.id}</a></td>
                <td>${ator.name}</td>
                <td>${ator.filmes.length}</td>
            </tr>
        `
    })

    pagHTML += `
        </table>
                </div>
                <footer class="w3-container w3-blue">
                    <h6>Gerado por EngWeb2024: A100665</h6>
                </footer>
            </div>
        </body>
    </html>
    `

    return pagHTML;
}

function genGenero(genre) {
    let filmesList = "";
    genre.filmes.forEach(filme => {
        filmesList += `<li>${filme} (${filme})</li>`;
    });

    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Gêneros</title>
            <link rel="stylesheet" href="/w3.css" />
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Gênero ${genre.name}</h1>
                </header>
                
                <div class="w3-container">
                    <p><b>ID:</b> ${genre.id}</p>
                    <p><b>Nome:</b> ${genre.name}</p>
                    <p><b>Filmes:</b></p>
                    <ul class="w3-ul">${filmesList}</ul>
                </div>

                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024 :: A100665 [<a href="/generos"> Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `;

    return pageHTML;
}

function genGeneros(genres) {
    let pagHTML = `
        <!DOCTYPE html>
        <html>
        <head>
            <title>Lista de Gêneros</title>
            <meta charset="utf-8"/>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Lista de Gêneros</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>ID</th>
                            <th>Nome</th>
                            <th>Filmes</th>
                        </tr>
    `

    genres.forEach(genre => {
        pagHTML += `
            <tr>
                <td><a href="/generos/${genre.id}">${genre.id}</a></td>
                <td>${genre.name}</td>
                <td>${genre.filmes.length}</td>
            </tr>
        `
    })

    pagHTML += `
        </table>
                </div>
                <footer class="w3-container w3-blue">
                    <h6>Gerado por EngWeb2024: A100665</h6>
                </footer>
            </div>
        </body>
    </html>
    `

    return pagHTML;
}


function genFilme(filme) {
    let castList = "";
    filme.cast.forEach(actor => {
        castList += `<li>${actor}</li>`;
    });

    let genreList = "";
    filme.genres.forEach(genre => {
        genreList += `<li>${genre}</li>`;
    });

    pageHTML = `
    <!DOCTYPE html>
    <html>
        <head>
            <meta charset="utf-8"/>
            <title>Filmes</title>
            <link rel="stylesheet" href="/w3.css" />
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Filme ${filme.title}</h1>
                </header>
                
                <div class="w3-container">
                    <p><b>ID:</b> ${filme.id}</p>
                    <p><b>Nome:</b> ${filme.title}</p>
                    <p><b>Ano:</b> ${filme.year}</p>
                    <p><b>Elenco:</b></p>
                    <ul class="w3-ul">${castList}</ul>
                    <p><b>Gêneros:</b></p>
                    <ul class="w3-ul">${genreList}</ul>
                </div>

                <footer class="w3-container w3-blue">
                    <h5>Generated by EngWeb2024 :: A100665 [<a href="/filmes"> Voltar à lista</a>]</h5>
                </footer>
            </div>
        </body>
    </html>
    `;

    return pageHTML;
}


function genFilmes(filmes) {
    let pagHTML = `
        <!DOCTYPE html>
        <html>
        <head>
            <title>Lista de Filmes</title>
            <meta charset="utf-8"/>
            <link rel="stylesheet" href="/w3.css">
        </head>
        <body>
            <div class="w3-card-4">
                <header class="w3-container w3-blue">
                    <h1>Lista de Filmes</h1>
                </header>
                
                <div class="w3-container">
                    <table class="w3-table w3-striped">
                        <tr>
                            <th>ID</th>
                            <th>Título</th>
                            <th>Ano</th>
                        </tr>
    `
    

    filmes.forEach(filme => {
        pagHTML += `
            <tr>
                <td><a href="/filmes/${filme.id}">${filme.id}</a></td>
                <td>${filme.title}</td>
                <td>${filme.year}</td>
            </tr>
        `
    })

    pagHTML += `
        </table>
                </div>
                <footer class="w3-container w3-blue">
                    <h6>Gerado por EngWeb2024: A100665</h6>
                </footer>
            </div>
        </body>
    </html>
    `

    return pagHTML;
}



http.createServer(function (req, res) {
    var regex = /^\/filmes\/[a-z0-9]+$/
    var regex_actors = /^\/actores\/[a-z0-9]+$/
    var regex_genres = /^\/generos\/[a-z0-9]+$/

    var q = url.parse(req.url, true)
    
    if(q.pathname == '/'){
        fs.readFile('index.html', function(erro, dados) {
            if(!erro){
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write(dados)
                res.end()
            }
            else{
                res.writeHead(200, {'Content-Type': 'text/html'})
                res.write('<p>Erro: ' + erro + '</p>')
                res.end()
            }
        })
    } else if(q.pathname == '/filmes'){
        axios.get('http://localhost:3000/filmes')
            .then(function(resp) {
                dados = resp.data;
                paginaHTML = genFilmes(dados);
                res.writeHead(200, {'Content-Type': 'text/html'});
                res.write(paginaHTML);
                res.end(); 
            })
            .catch(error => {
                res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'});
                res.write('<p>Erro: Página não encontrada.</p>');
                res.write('<pre>' + error + '</pre>');
                res.end();
            }) 
    } else if (q.pathname == '/actores') {
        axios.get('http://localhost:3000/actores')
            .then(function(resp) {
                dados = resp.data;
                paginaHTML = genAtores(dados);
                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
                res.write(paginaHTML);
                res.end();
            })
            .catch(function(error) {
                res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'});
                res.write('<p>Erro: Página não encontrada.</p>');
                res.write('<pre>' + error + '</pre>');
                res.end();
            });
    } else if (q.pathname == '/generos') {
        axios.get('http://localhost:3000/generos')
            .then(function(resp) {
                dados = resp.data;
                paginaHTML = genGeneros(dados);
                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8'});
                res.write(paginaHTML);
                res.end();
            })
            .catch(function(error) {
                res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'});
                res.write('<p>Erro: Página não encontrada.</p>');
                res.write('<pre>' + error + '</pre>');
                res.end();
            });
    } else if (regex.test(q.pathname)) {
        axios.get('http://localhost:3000' + q.pathname)
            .then(function(resp){        
                dados = resp.data;
                paginaHTML = genFilme(dados);
                res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8 '});
                res.write(paginaHTML);
                res.end(); 

            })
            .catch(function(erro) {
                console.error('Error fetching movie:', erro);
                res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'});
                res.write('<p>Erro: Página não encontrada.</p>');
                res.write('<pre>' + erro + '</pre>');
                res.end();
            })
        } else if (regex_actors.test(q.pathname)) {
            axios.get('http://localhost:3000' + q.pathname)
                .then(function(resp){        
                    dados = resp.data;
                    paginaHTML = genAtor(dados);
                    res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8 '});
                    res.write(paginaHTML);
                    
                    res.end(); 
    
                })
                .catch(function(erro) {
                    console.error('Error fetching actor:', erro);
                    res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'});
                    res.write('<p>Erro: Página não encontrada.</p>');
                    res.write('<pre>' + erro + '</pre>');
                    res.end();
                }) 
        } else if (regex_genres.test(q.pathname)) {
            axios.get('http://localhost:3000' + q.pathname)
                .then(function(resp){        
                    dados = resp.data;
                    paginaHTML = genGenero(dados);
                    res.writeHead(200, {'Content-Type': 'text/html; charset=utf-8 '});
    
                    res.write(paginaHTML);
                    
                    res.end(); 
    
                })
                .catch(function(erro) {
                    console.error('Error fetching genre:', erro);
                    res.writeHead(500, {'Content-Type': 'text/html; charset=utf-8'});
                    res.write('<p>Erro: Página não encontrada.</p>');
                    res.write('<pre>' + erro + '</pre>');
                    res.end();
                }) 
        } else if(q.pathname == '/w3.css'){
            fs.readFile('w3.css', function(erro, dados) {
                res.writeHead(200, {'Content-Type': 'text/css'})
                res.write(dados)
                res.end()
            })
        } else {
        res.writeHead(400, {'Content-Type': 'text/html; charset=utf-8'});
        res.write('<p>Erro: Página não encontrada</p>');
        res.end();
    }
}).listen(7778);
    